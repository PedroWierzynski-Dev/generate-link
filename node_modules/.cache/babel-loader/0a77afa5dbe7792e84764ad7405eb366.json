{"ast":null,"code":"// Buscar links salvos\nexport async function getLinksSave(key) {\n  const myLinks = await localStorage.getItem(key);\n  let linksSaves = JSON.parse(myLinks) || [];\n  return linksSaves;\n}\n\n//Salvar link no storage\nexport async function saveLink(key, newLink) {\n  let linksStored = await getLinksSave(key);\n\n  //Se tiver um link salvo, ele não permite duplicar\n  const hasLink = linksStored.some(Link => Link.id === newLink.id);\n  if (hasLink) {\n    console.log('Esse link ja existe');\n    return;\n  }\n\n  //Adicionar novo link na lista\n  linksStored.push(newLink);\n  await localStorage.setItem(key, JSON.stringify(linksStored));\n  console.log('link salvo com sucesso');\n}\n\n//Deletar links\nexport function deleteLink(Links, id) {\n  let myLinks = Links.filter(item => {\n    return item.id !== id;\n  });\n  localStorage.setItem('@encurtaLink', JSON.stringify(myLinks));\n}","map":{"version":3,"names":["getLinksSave","key","myLinks","localStorage","getItem","linksSaves","JSON","parse","saveLink","newLink","linksStored","hasLink","some","Link","id","console","log","push","setItem","stringify","deleteLink","Links","filter","item"],"sources":["/Users/intergalaxy/Desktop/projects/generate-link/src/services/storeLinks.js"],"sourcesContent":["// Buscar links salvos\nexport async function getLinksSave(key){\n\tconst myLinks = await localStorage.getItem(key)\n\tlet linksSaves = JSON.parse(myLinks) || [];\n\n\treturn linksSaves;\n}\n\n\n//Salvar link no storage\nexport async function saveLink(key, newLink){\n\tlet linksStored = await getLinksSave(key);\n\n\n\t//Se tiver um link salvo, ele não permite duplicar\n\tconst hasLink = linksStored.some( Link => Link.id === newLink.id)\n\n\tif(hasLink){\n\t\tconsole.log('Esse link ja existe');\n\t\treturn;\n\t}\n\n\t//Adicionar novo link na lista\n\tlinksStored.push(newLink)\n\tawait localStorage.setItem(key, JSON.stringify(linksStored))\n\tconsole.log('link salvo com sucesso');\n}\n\n\n//Deletar links\nexport function deleteLink(Links, id){\n\tlet myLinks = Links.filter( item => {\n\t\treturn(item.id !== id)\n\t})\n\n\tlocalStorage.setItem('@encurtaLink', JSON.stringify(myLinks))\n\n}"],"mappings":"AAAA;AACA,OAAO,eAAeA,YAAY,CAACC,GAAG,EAAC;EACtC,MAAMC,OAAO,GAAG,MAAMC,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC;EAC/C,IAAII,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC,IAAI,EAAE;EAE1C,OAAOG,UAAU;AAClB;;AAGA;AACA,OAAO,eAAeG,QAAQ,CAACP,GAAG,EAAEQ,OAAO,EAAC;EAC3C,IAAIC,WAAW,GAAG,MAAMV,YAAY,CAACC,GAAG,CAAC;;EAGzC;EACA,MAAMU,OAAO,GAAGD,WAAW,CAACE,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;EAEjE,IAAGH,OAAO,EAAC;IACVI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC;EACD;;EAEA;EACAN,WAAW,CAACO,IAAI,CAACR,OAAO,CAAC;EACzB,MAAMN,YAAY,CAACe,OAAO,CAACjB,GAAG,EAAEK,IAAI,CAACa,SAAS,CAACT,WAAW,CAAC,CAAC;EAC5DK,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;AACtC;;AAGA;AACA,OAAO,SAASI,UAAU,CAACC,KAAK,EAAEP,EAAE,EAAC;EACpC,IAAIZ,OAAO,GAAGmB,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAI;IACnC,OAAOA,IAAI,CAACT,EAAE,KAAKA,EAAE;EACtB,CAAC,CAAC;EAEFX,YAAY,CAACe,OAAO,CAAC,cAAc,EAAEZ,IAAI,CAACa,SAAS,CAACjB,OAAO,CAAC,CAAC;AAE9D"},"metadata":{},"sourceType":"module"}